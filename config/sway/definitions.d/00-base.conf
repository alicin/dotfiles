### Variables
#
# Logo key. Use Mod1 for Alt and Mod4 for Super.
set $mod Mod4

# Direction keys
set $left Left
set $down Down
set $up Up
set $right Right

# Add --to-code to bindsym, support for non-latin layouts
set $bindsym bindsym --to-code

# For user's convenience, the same for unbindsym
set $unbindsym unbindsym --to-code

# background
set $bg ~/.wallpaper/seql.jpg

# Your preferred terminal emulator
set $term kitty
set $term_cwd $term -D $(swaycwd 2>/dev/null || echo $HOME)
set $term_float $term --class floating_shell
set $term_float_portrait $term --class floating_shell_portrait

# editor
set $editor code

# dmenu
set $dmenu wofi --show dmenu

# browser
# TODO:
set $browser firefox

set $slack slack --enable-features=UseOzonePlatform --ozone-platform=wayland

# onscreen bar
# TODO:
set $onscreen_bar bash $HOME/labs/dotfiles/scripts/wob.sh "#EB8A7DFF" "#2C2440FF"

# colorpicker
set $colorpicker hyprpicker | wl-copy

# brightness control
set $brightness_step bash -c 'echo $(( $(light -Mr) / 100 * 5 < 1 ? 1 : $(( $(light -Mr) / 100 * 5 )) ))'
set $brightness_up brightnessctl s +10% && $onscreen_bar $(light -G | cut -d'.' -f1)
set $brightness_down brightnessctl s 10%- && $onscreen_bar $(light -G | cut -d'.' -f1)


# audio control
set $sink_volume pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $source_volume pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $volume_down $onscreen_bar $(pactl set-sink-volume @DEFAULT_SINK@ -5% && $sink_volume)
set $volume_up $onscreen_bar $(pactl set-sink-volume @DEFAULT_SINK@ +5% && $sink_volume)
set $volume_mute $onscreen_bar $(pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | sed -En "/no/ s/.*/$($sink_volume)/p; /yes/ s/.*/0/p")
set $mic_mute $onscreen_bar $(pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl get-source-mute @DEFAULT_SOURCE@ | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p")

# window selector
set $windows exec swaymsg \[con_id=$(swaymsg -t get_tree | jq -r '.nodes | .[] | .nodes | . [] | select(.nodes != null) | .nodes | .[] | select(.name != null) | "\(.id?) \(.name?)"' | $dmenu | awk '{print $1}')] focus

# clipboard history
set $clipboard cliphist list | $dmenu | cliphist decode | wl-copy

set $clipboard-del cliphist list | $dmenu | cliphist delete

# zeit tracking
set $zeit_list zeit list --only-projects-and-tasks --append-project-id-to-task | \
    $dmenu | \
    /usr/share/sway/scripts/zeit.sh track && \
    pkill -RTMIN+10 waybar

# Your preferred application launcher
set $menu wofi --show drun --allow-images --width=600

### Lockscreen configuration
set $locking hyprlock

# POWER
set $reboot systemctl reboot
set $shutdown sytemctl poweroff
set $suspend systemctl suspend

###Notification daemon configuration
set $notifications mako --border-size 3 --width 400 --height 200 --padding 20 --margin 20 --default-timeout 15000

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#
set $idle hypridle

# statusbar command
set $bar /home/ali/.config/waybar/waybar.sh
set $waybar_position top

# pulseaudio command
set $pulseaudio $term_float pulsemixer

# help command
set $help /usr/share/sway/scripts/help.sh

# calendar application
set $calendar $term_float khal interactive

# workspace names
set $ws1 number 1
set $ws2 number 2
set $ws3 number 3
set $ws4 number 4
set $ws5 number 5
set $ws6 number 6
set $ws7 number 7
set $ws8 number 8
set $ws9 number 9
set $ws10 number 10
set $ws11 number 11
set $ws12 number 12


# screenshot
set $grimshot /usr/share/sway/scripts/grimshot
set $image_upload /usr/share/sway/scripts/upload-image.sh
set $screenshot_screen_clipboard $grimshot --notify copy output
set $screenshot_screen_file $grimshot --notify save output
set $screenshot_screen_upload $screenshot_screen_file | xargs $image_upload
set $screenshot_selection_clipboard $grimshot --notify copy window
set $screenshot_selection_file $grimshot --notify save window
set $screenshot_selection_upload $screenshot_selection_file | xargs $image_upload
