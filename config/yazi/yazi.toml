# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[mgr]
show_hidden = true
show_symlink = true
ratio = [1, 1, 2]

[preview]
tab_size = 2
max_width = 600
max_height = 900
cache_dir = ""
image_delay = 30
image_filter = "triangle"
image_quality = 75
sixel_fraction = 15
ueberzug_scale = 1
ueberzug_offset = [0, 0, 0, 0]

[opener]
edit = [
  { run = 'nano "$@"', desc = "nano", block = true, for = "unix" },
  { run = 'code %*', orphan = true, desc = "code", for = "windows" },
  { run = 'code -w %*', block = true, desc = "code (block)", for = "windows" },
]
open = [
  { run = 'xdg-open "$1"', desc = "Open", for = "linux" },
  { run = 'open "$@"', desc = "Open", for = "macos" },
  { run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
]
code = [{ run = 'cursor "$@"', desc = "code", for = "unix" }]
reveal = [
  { run = 'xdg-open "$(dirname "$1")"', desc = "Reveal", for = "linux" },
  { run = 'open -R "$1"', desc = "Reveal", for = "macos" },
  { run = 'explorer /select,"%1"', orphan = true, desc = "Reveal", for = "windows" },
  { run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
  { run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
  { run = 'ya pub extract --list %*', desc = "Extract here", for = "windows" },
]
play = [
  { run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
  { run = 'mpv --force-window %*', orphan = true, for = "windows" },
  { run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]

[open]
rules = [
  # Folder
  { name = "*/", use = [
    "code",
    "edit",
    "open",
    "reveal",
  ] },
  # Text
  { mime = "text/*", use = [
    "edit",
    "reveal",
  ] },
  # Image
  { mime = "image/*", use = [
    "open",
    "reveal",
  ] },
  # Media
  { mime = "{audio,video}/*", use = [
    "play",
    "reveal",
  ] },
  # Archive
  { mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", use = [
    "extract",
    "reveal",
  ] },
  # JSON
  { mime = "application/{json,ndjson}", use = [
    "edit",
    "reveal",
  ] },
  { mime = "*/javascript", use = [
    "edit",
    "reveal",
  ] },
  # Empty file
  { mime = "inode/empty", use = [
    "edit",
    "reveal",
  ] },
  # Fallback
  { name = "*", use = [
    "open",
    "reveal",
  ] },
]
